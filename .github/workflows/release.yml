name: Release

on:
    workflow_call:

jobs:
    tag:
        name: Create Tag
        runs-on: ubuntu-latest
        outputs:
            tag: ${{steps.tag.outputs.result}}
        steps:
            - uses: actions/github-script@v7
              id: tag
              with:
                  result-encoding: string
                  script: |
                      let ref;
                      if (context.eventName == "workflow_dispatch") {
                          // calculate version string
                          const date = new Date();
                          const year = date.getFullYear();
                          const month = (date.getMonth() + 1).toString().padStart(2, "0");
                          const day = date.getDate().toString().padStart(2, "0");
                          version = `${year}.${month}.${day}`;
                          // get all tags that have the same version prefix
                          ref = `tags/${version}`;
                          let refs = (
                              await github.rest.git.listMatchingRefs({
                                  owner: context.repo.owner,
                                  repo: context.repo.repo,
                                  ref: ref,
                              })
                          ).data
                              .map((item) => item.ref)
                              .sort();
                          console.log("Found Versions References:");
                          console.log(refs);
                          ref = `refs/${ref}`;
                          // calculate the revision as the highest existing revision + 1
                          if (refs.length !== 0) {
                              let rev = 1;
                              for (const existing_ref of refs) {
                                  let existing_rev = Number(
                                      existing_ref.replace(ref, "").replace(/^\./, ""),
                                  );
                                  if (existing_rev && existing_rev >= rev) {
                                      rev = existing_rev + 1;
                                  }
                              }
                              ref = `${ref}.${rev}`;
                          }
                          console.log(`Creating new reference: ${ref}`);
                          // create the tag
                          github.rest.git.createRef({
                              owner: context.repo.owner,
                              repo: context.repo.repo,
                              ref: ref,
                              sha: context.sha,
                          });
                      } else {
                          // if a tag was already made, use it
                          ref = context.ref;
                      }
                      return ref.replace("refs/tags/", "");

    release:
        name: Create Release
        needs: tag
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  ref: refs/tags/${{needs.tag.outputs.tag}}
            - uses: softprops/action-gh-release@v2
              with:
                  name: ${{needs.tag.outputs.tag}}
                  tag_name: refs/tags/${{needs.tag.outputs.tag}}
                  generate_release_notes: true
