name: Python Checks

on:
    workflow_call:
        inputs:
            python_version:
                description: "Python version to use"
                default: "3.11"
                required: false
                type: string
            pytest:
                description: "Enable pytest testing"
                default: false
                required: false
                type: boolean
            sphinx:
                description: "Enable sphinx documentation"
                default: false
                required: false
                type: boolean

jobs:
    lsp:
        name: Types (pyright)
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - run: pipx install poetry
            - uses: actions/setup-python@v5
              id: setup_python
              with:
                  python-version: ${{ inputs.python_version }}
                  cache: "poetry"
            - run: poetry install
            - run: echo "$(poetry env info --path)/bin" >> $GITHUB_PATH
            - name: run pyright
              uses: jakebailey/pyright-action@v2
              with:
                  python-version: ${{ steps.setup_python.outputs.python-version }}
    black:
        name: Formatting (black)
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: psf/black@stable
    isort:
        name: Formatting (isort)
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: isort/isort-action@v1
    test:
        name: Tests (pytest)
        needs:
            - lsp
        if: ${{ inputs.pytest }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - run: pipx install poetry
            - uses: actions/setup-python@v5
              id: setup_python
              with:
                  python-version: ${{ inputs.python_version }}
                  cache: "poetry"
            - run: poetry install
            - run: poetry run pytest --junitxml=junit/test-results-${{ steps.setup_python.outputs.python-version }}.xml
            - name: upload pytest results
              uses: actions/upload-artifact@v4
              with:
                  name: pytest-results-${{ steps.setup_python.outputs.python-version }}
                  path: junit/test-results-${{ steps.setup_python.outputs.python-version }}.xml
    sphinx:
        name: Documentation (sphinx)
        if: ${{ inputs.sphinx }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - run: pipx install poetry
            - uses: actions/setup-python@v5
              id: setup_python
              with:
                  python-version: ${{ inputs.python_version }}
                  cache: "poetry"
            - run: poetry install
            - run: |
                  cd docs
                  make html
            - id: deployment
              uses: actions/upload-pages-artifact@v3
              with:
                  path: docs/_build/html/
    github_pages:
        name: Deploy to GitHub Pages
        if: ${{ github.event_name == 'push' }}
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs: sphinx
        steps:
            - uses: actions/deploy-pages@v4
              id: deployment
